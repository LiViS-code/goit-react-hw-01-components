{"version":3,"sources":["lib/number-with-commas.js","images/usr_default.png","components/Profile.jsx","lib/random-color.js","components/Statistics.jsx","components/Friend-list.jsx","components/Transaction.jsx","App.js","index.js"],"names":["numberWithCommas","x","toString","replace","Profile","user","avatar","userDefaultAvatar","username","tag","location","stats","followers","views","likes","className","src","alt","width","randomColor","saturation","lightness","alpha","hue","localStorage","getItem","Math","round","Number","random","ceil","setItem","Statistics","title","map","el","style","backgroundColor","label","percentage","id","FriendList","friends","isOnline","name","propsTypes","data","PropTypes","arrayOf","shape","number","isRequired","string","bool","TransactionHistory","transactions","type","amount","currency","App","Transaction","transaction","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"6uGAIeA,MAJf,SAA0BC,GACxB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,MCDxC,MAA0B,wC,OCqD1BC,MAjDf,YAA4B,IAATC,EAAQ,EAARA,KACjB,EAMIA,EALFC,cADF,MACWC,EADX,EAEEC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,IACAC,EAEEL,EAFFK,SAJF,EAMIL,EADFM,MAASC,EALX,EAKWA,UAAWC,EALtB,EAKsBA,MAAOC,EAL7B,EAK6BA,MAE7B,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKV,EAAQW,IAAKT,EAAUO,UAAU,SAASG,MAAM,QAC1D,mBAAGH,UAAU,OAAb,SAAqBP,IACrB,mBAAGO,UAAU,MAAb,SAAoBN,IACpB,mBAAGM,UAAU,WAAb,SAAyBL,OAG3B,qBAAIK,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4Bf,EAAiBY,QAG/C,+BACE,sBAAMG,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4Bf,EAAiBa,QAG/C,+BACE,sBAAME,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4Bf,EAAiBc,eCpBxCK,MAdf,WAAoE,IAA/CC,EAA8C,uDAAjC,IAAKC,EAA4B,uDAAhB,IAAKC,EAAW,uDAAH,EAC1DC,EAAM,EAQV,OAPAA,EAAOC,aAAaC,QAAQ,YAExBC,KAAKC,MACHC,OAAOJ,aAAaC,QAAQ,aAA+B,GAAhBC,KAAKG,SAAgB,KAFlEH,KAAKI,KAAqB,IAAhBJ,KAAKG,WAIT,MAAKN,GAAO,KACtBC,aAAaO,QAAQ,WAAYR,GAE/B,QAAUA,EAAM,IAAMH,EAAa,KAAOC,EAAY,KAAOC,EAAQ,KCmB1DU,MA3Bf,YAAuC,IAAjBC,EAAgB,EAAhBA,MAAOtB,EAAS,EAATA,MAC3B,OACE,0BAASI,UAAU,aAAnB,UACE,oBAAIA,UAAU,QAAd,SAAuBkB,GAASA,IAEhC,oBAAIlB,UAAU,YAAd,SACGJ,EAAMuB,KAAI,SAAAC,GAAE,OACX,qBAAIpB,UAAU,OAAmBqB,MAAO,CAACC,gBAAiBlB,EAAY,IAAK,GAAI,IAA/E,UACE,sBAAMJ,UAAU,QAAhB,SAAyBoB,EAAGG,QAC5B,uBAAMvB,UAAU,aAAhB,UAA8BoB,EAAGI,WAAjC,SAFwBJ,EAAGK,a,gBCNvC,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,oBAAI3B,UAAU,cAAd,SACG2B,EAAQR,KAAI,gBAAGM,EAAH,EAAGA,GAAIG,EAAP,EAAOA,SAAP,IAAiBrC,cAAjB,MAA0BC,EAA1B,EAA6CqC,EAA7C,EAA6CA,KAA7C,OACX,qBAAI7B,UAAW4B,EAAW,cAAgB,OAA1C,UACE,sBAAM5B,UAAW4B,EAAW,gBAAkB,WAC9C,qBAAK5B,UAAU,SAASC,IAAKV,EAAQW,IAAI,cAAcC,MAAM,OAC7D,mBAAGH,UAAU,OAAb,SAAqB6B,MAHgCJ,QAU/DC,EAAWI,WAAa,CACtBC,KAAMC,IAAUC,QACdD,IAAUE,MAAM,CACdT,GAAIO,IAAUG,OAAOC,WACrB7C,OAAQyC,IAAUK,OAClBR,KAAMG,IAAUK,OAAOD,WACvBR,SAAUI,IAAUM,KAAKF,cAE3BA,YAGWV,QC1Bf,SAASa,EAAT,GAA6C,IAAhBC,EAAe,EAAfA,aAC3B,OACE,wBAAOxC,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCAEIwC,EAAarB,KAAI,gBAAEM,EAAF,EAAEA,GAAIgB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,SAApB,OACf,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHElB,WAYrBc,EAAmBT,WAAa,CAC9BC,KAAMC,IAAUC,QAAQD,IAAUE,MAAM,CACtCT,GAAIO,IAAUK,OAAOD,WACrBK,KAAMT,IAAUK,OAAOD,WACvBM,OAAQV,IAAUK,OAAOD,WACzBO,SAAUX,IAAUK,OAAOD,aAC1BA,YAAaA,YAGHG,Q,4BChBAK,MAXf,WACE,OACE,qCACE,cAAC,EAAD,CAAStD,KAAMA,IACf,cAAC,EAAD,CAAY4B,MAAM,eAAetB,MAAOmC,IACxC,cAAC,EAAD,CAAYJ,QAASA,IACrB,cAACkB,EAAD,CAAoBL,aAAcM,QCXxCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.8eeceeb5.chunk.js","sourcesContent":["function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n}\r\n\r\nexport default numberWithCommas;\r\n","export default __webpack_public_path__ + \"static/media/usr_default.7ffcf71e.png\";","import numberWithCommas from '../lib/number-with-commas';\r\nimport PropTypes from 'prop-types';\r\nimport userDefaultAvatar from '../images/usr_default.png';\r\n\r\nfunction Profile({ user }) {\r\n  const {\r\n    avatar = userDefaultAvatar,\r\n    username,\r\n    tag,\r\n    location,\r\n    stats: { followers, views, likes },\r\n  } = user;\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt={username} className=\"avatar\" width=\"150\" />\r\n        <p className=\"name\">{username}</p>\r\n        <p className=\"tag\">{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{numberWithCommas(followers)}</span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{numberWithCommas(views)}</span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{numberWithCommas(likes)}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  username: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","function randomColor(saturation = 100, lightness = 100, alpha = 1) {\r\n  let hue = 0;\r\n  hue = !localStorage.getItem('hueBlock')\r\n    ? Math.ceil(Math.random() * 360)\r\n    : Math.round(\r\n        Number(localStorage.getItem('hueBlock')) + Math.random() * 80 + 100,\r\n      );\r\n  if (hue > 360) hue -= 360;\r\n  localStorage.setItem('hueBlock', hue);\r\n  return (\r\n    'hsla(' + hue + ',' + saturation + '%,' + lightness + '%,' + alpha + ')'\r\n  );\r\n}\r\n\r\nexport default randomColor;\r\n","import PropTypes from 'prop-types';\r\nimport randomColor from '../lib/random-color';\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <section className=\"statistics\">\r\n      <h2 className=\"title\">{title && title}</h2>\r\n\r\n      <ul className=\"stat-list\">\r\n        {stats.map(el => (\r\n          <li className=\"item\" key={el.id} style={{backgroundColor: randomColor(100, 30, 1)}}>\r\n            <span className=\"label\">{el.label}</span>\r\n            <span className=\"percentage\">{el.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  })).isRequired\r\n} \r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport userDefaultAvatar from '../images/usr_default.png';\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map(({ id, isOnline, avatar = userDefaultAvatar, name }) => (\r\n        <li className={isOnline ? 'item online' : 'item'} key={id}>\r\n          <span className={isOnline ? 'status online' : 'status'}></span>\r\n          <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\r\n          <p className=\"name\">{name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propsTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction TransactionHistory({transactions}) {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {\r\n          transactions.map(({id, type, amount, currency}) => (\r\n            <tr key={id}>\r\n              <td>{type}</td>\r\n              <td>{amount}</td>\r\n              <td>{currency}</td>\r\n            </tr>\r\n        ))\r\n        }\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propsTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  }).isRequired,).isRequired,\r\n}\r\n\r\nexport default TransactionHistory;","import './App.css';\nimport Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport FriendList from './components/Friend-list';\nimport TransactionHistory from './components/Transaction';\nimport user from './data/user.json';\nimport data from './data/data.json';\nimport friends from './data/friends.json';\nimport transaction from './data/transaction.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile user={user} />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transaction} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}